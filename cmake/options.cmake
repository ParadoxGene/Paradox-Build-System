# Sets up the general library options
# PARADOX_BUILD_LANG for single language build
macro(paradox_library_options)
    option(PARADOX_BUILD_C_LIBS "Builds static|shared C libraries" ON)
    option(PARADOX_BUILD_CXX_LIBS "Builds static|shared C++ libraries" ON)
    option(PARADOX_BUILD_Swift_LIBS "Builds Swift libraries" ON)
    option(PARADOX_BUILD_SHARED_LIBS "Builds shared libraries" ON)
    if(PARADOX_BUILD_CXX_LIBS)
        set(PARADOX_BUILD_LANG CXX)
        set(PARADOX_BUILD_LANG_EXT "cpp")
        set(PARADOX_BUILD_LIB ON)
    elseif(PARADOX_BUILD_C_LIBS)
        set(PARADOX_BUILD_LANG C)
        set(PARADOX_BUILD_LANG_EXT "c")
        set(PARADOX_BUILD_LIB ON)
    elseif(PARADOX_BUILD_Swift_LIBS)
        set(PARADOX_BUILD_LANG Swift)
        set(PARADOX_BUILD_LANG_EXT "swift")
        set(PARADOX_BUILD_LIB ON)
    endif()

    if("${PARADOX_BUILD_LANG}" STREQUAL "C")
        set(CMAKE_C_STANDARD 11)
        set(CMAKE_C_STANDARD_REQUIRED ON)
        set(CMAKE_C_EXTENSIONS ON)
        project(paradox-project C)
    elseif("${PARADOX_BUILD_LANG}" STREQUAL "CXX")
        set(CMAKE_CXX_STANDARD 11)
        set(CMAKE_CXX_STANDARD_REQUIRED ON)
        set(CMAKE_CXX_EXTENSIONS ON)
        project(paradox-project CXX)
    elseif("${PARADOX_BUILD_LANG}" STREQUAL "Swift")
        project(paradox-project Swift)
    endif()
endmacro()

macro(paradox_tests_options)
    option(PARADOX_BUILD_TESTS "Builds the test cases" OFF)
endmacro()

macro(paradox_documentation_options)
    option(PARADOX_BUILD_DOCS "Builds the documentation" OFF)
endmacro()

if("${PARADOX_BUILD_LANG}" STREQUAL "C")
    set(CMAKE_C_STANDARD 11)
    set(CMAKE_C_STANDARD_REQUIRED ON)
    set(CMAKE_C_EXTENSIONS ON)
    project(paradox-project C)
elseif("${PARADOX_BUILD_LANG}" STREQUAL "CXX")
    set(CMAKE_CXX_STANDARD 11)
    set(CMAKE_CXX_STANDARD_REQUIRED ON)
    set(CMAKE_CXX_EXTENSIONS ON)
    project(paradox-project CXX)
elseif("${PARADOX_BUILD_LANG}" STREQUAL "Swift")
    project(paradox-project Swift)
endif()